// Code generated by MockGen. DO NOT EDIT.
// Source: builder.go

// Package ydbm_test is a generated GoMock package.
package ydbm_test

import (
	reflect "reflect"
	time "time"

	builder "github.com/alexeyco/ydbm/internal/builder"
	gomock "github.com/golang/mock/gomock"
	table "github.com/ydb-platform/ydb-go-sdk/v3/table"
)

// MockBuilder is a mock of Builder interface.
type MockBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockBuilderMockRecorder
}

// MockBuilderMockRecorder is the mock recorder for MockBuilder.
type MockBuilderMockRecorder struct {
	mock *MockBuilder
}

// NewMockBuilder creates a new mock instance.
func NewMockBuilder(ctrl *gomock.Controller) *MockBuilder {
	mock := &MockBuilder{ctrl: ctrl}
	mock.recorder = &MockBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBuilder) EXPECT() *MockBuilderMockRecorder {
	return m.recorder
}

// CurrentVersion mocks base method.
func (m *MockBuilder) CurrentVersion(arg0, arg1 string) (string, *table.QueryParameters) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentVersion", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*table.QueryParameters)
	return ret0, ret1
}

// CurrentVersion indicates an expected call of CurrentVersion.
func (mr *MockBuilderMockRecorder) CurrentVersion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentVersion", reflect.TypeOf((*MockBuilder)(nil).CurrentVersion), arg0, arg1)
}

// Delete mocks base method.
func (m *MockBuilder) Delete(arg0, arg1 string, arg2 builder.Migration) (string, *table.QueryParameters) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*table.QueryParameters)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockBuilderMockRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockBuilder)(nil).Delete), arg0, arg1, arg2)
}

// Insert mocks base method.
func (m *MockBuilder) Insert(arg0, arg1 string, arg2 builder.Migration, arg3 time.Time) (string, *table.QueryParameters) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*table.QueryParameters)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockBuilderMockRecorder) Insert(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockBuilder)(nil).Insert), arg0, arg1, arg2, arg3)
}
